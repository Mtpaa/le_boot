/* Body */
body {
    padding: 0px;
    margin: 0px;
    height: 100%;
}

html {
	height: 100%;
}

h1, h2, h3 {
	line-height: 30px;
}

a {
	transition: all 0.2s ease-out; 
}

.btn {
	-webkit-user-select: none;  /* Chrome all / Safari all */
    -moz-user-select: none;     /* Firefox all */
    -ms-user-select: none;      /* IE 10+ */
    -o-user-select: none;
    user-select: none;
}


/* Social links */
#share ul {
	margin: 0px;
}

#share li {
	list-style: none;
}

.float_left {
	float: left;
}

.social_links {
	width: 100%;
}


/* Map */
#map {
	/* background-color: #08304a; */
	position: absolute;
	float: left;
	top: 1%;
	height: 98%;
	width: 100%;
	z-index: 7;
}


/* Sidebar */
#sidebar {
	position: absolute;
	top: 2%;
	right: 1%;
	height: 96%;
	width: 32%;
	border: 1px solid #999;
	background-color: #FFFFFF;
	background-color:rgba(255, 255, 255,0.9);
	padding-left: 1%;
	padding-right: 1%;
	z-index: 10;
}

#sidebar h2 {
	float: left;
}

.sidebar_content {
	width: 32%;
	height: 70%;
	padding-top: 5px;
	position: fixed;
	overflow: auto;
}


/* Pop-up information */
.popup_box_header {
    font-size: 16px;
}

hr {
	margin: 5px 0 5px 0;
}


/* Credits */
#credits {
	display: none;
}

#credits p {
	font-size: 9px;
}


/* 'About this map' button, description box */
/* Mobile only */
/*
Now we do the opposite with the "toggle_description" when compared to what we did with the 
"sidebar_content" div.

With the "sidebar_content" div, we had it shown by default then hidden on 
mobile phones using CSS media queries. With the button, we hide it by default and then 
show it on mobile phones using a CSS property of "display: inline".
*/
.toggle_description {
	display: none;
	z-index: 9;
	position: relative;
	float: right;
    right: 0%;
    top: 0%;
}

.description_box_cover {
	display: none;
	z-index: 12;
	position: absolute;
	top: 0%;
	width: 100%;
	height: 100%;
    background-color: #333333;
    background-color:rgba(33,33,33,0.9);
}

.description_box {
	position: absolute;
	display: none;
	z-index: 13;
	height: 96%;
	width: 96%;
	left: 1%;
    padding-left: 1%;
    padding-right: 1%;
    padding-top: 1%;
    top: 1%;
    background-color: #FFFFFF;
	background-color:rgba(255, 255, 255,0.9);
    border: 1px solid #999;
 }   

.description_box h3 {
	padding-bottom: 0px;
	line-height: 15px;
}

.description_box_content {
	width: 96%;
	height: 80%;
	position: fixed;
	overflow: auto;
}

.x_button {
	width: 15px;
}

/* Caption box in description box */
#caption_box {
	font-size: 12px;
	font-style: italic;
}


/* 'Scroll more' text in description box */
/* Only visible on wide screens */
#scroll_more {
	display: none;
	color: #0088CC;
	padding-bottom: 10px;
}


/* Leaflet controls */
.leaflet-control-zoom a, .leaflet-control-zoom a:hover {
    text-decoration: none;
}

.leaflet-top {
	z-index: 8;
}

.leaflet-right {
	left: 0;
	right: 100;
}

.leaflet-bottom {
    pointer-events: none;
    z-index: 8;
}


/* Styles for smaller screens */
@media (max-width: 700px) {
	h2 {
		font-size: 24px;
	}

	h3 {
		font-size: 18px;
	}
	
	p {
		font-size: 13px;
	}
}

/* Styles from mobile devices */
/*  It says: If the Browser is 625 pixels wide or smaller, 
apply the following CSS styles. These styles would therefore apply to almost all mobile phones.
First thing: Hide the "sidebar_content" div, which is the main "sidebar" div.
Besides the "sidebar_content" div, we also have a div within the "sidebar" div called "sidebar_header" for our title.
The templates sets the title to"<Insert your title here>" initially, although you should change that to match your project.
We hide the "sidebar_content" div with the property "display:none" Hiding it ensures that the only thing left our "sidebar" div
ia the title. Then the sidebar is pushed to the top left corner of the page using absolute positioning.
So what do we do with that information we have hidden? We put it in another div using some JavaScript
Then we toggle that div from hidden to visible using a button with the class "toggle_description"
This toggle feature is enabled using JQuery.
!!!!***!!!***!!!js/script.js !!!***!!!***!!!

As a noted above, when someone clicks on that button, JQuery toogles between hidden and shown on the button with the class
"toggle_description". It is hidden by default, so it is shown when the user first clicks it. 
Then when the user clicks the blue X button (which also has the class of ("toggle description"), the box disappears.

A similar philosophy is in place to hide and show the credits box.
That should give you a good idea of what is happening with this map.
*/
@media (max-width: 625px) {
	/* Headers */
	h1, h2, h3 {
    	line-height: 20px;
	}


	/* Map */
	#map {
		cursor: default;
		border: 0px solid #737373;
		top: 0%;
		bottom: 0%;
		height: 100%;
		width: 100%;
	}
	

	/* Social buttons */
	#share {
		display: none;
	}
	
	
	/* Sidebar */
	#sidebar {
		position: relative;
		border-width: 0 0 1px;
		border-bottom: 1px solid #FFFFFF;
		margin-top: 0%;
		float: left;
		left: 0%;
		right: 0%;
		top: 0%;
		padding-left: 2%;
		padding-right: 2%;
		width: 96%;
		height: auto;
	}

	#sidebar h3 {
    	line-height: 15px;
    	font-size: 20px;
	}

	.sidebar_content {
		display: none;
	}

	.description_box_header h3 {
		line-height: 25px;
	}

	.toggle_description {
		display: inline;
	}

	
	/* Leaflet controls */
	.leaflet-top {
    	margin-top: 55px;
	}

	.leaflet-right {
		display: none;
	}

	.leaflet-container .leaflet-control-attribution, .leaflet-container .leaflet-control-scale {
		font-size: 10px;
	}

	.leaflet-bar {
		box-shadow: 0 0 0 rgba(0,0,0,0.4);
	}
}


/* Special attributes for small, wide screens */
@media (max-height: 500px) {
	#scroll_more {
		display: block;
	}

	.sidebar_content {
		height: 60%;
	}

	.description_box_content {
		height: 75%;
	}
}

@media (max-height: 400px) {
	#scroll_more {
		display: block;
	}

	.sidebar_content {
		height: 60%;
	}

	.description_box_content {
		height: 75%;
	}
}

@media (max-height: 320px) {
	.sidebar_content {
		height: 40%;
	}

	.description_box_content {
		height: 65%;
	}

}